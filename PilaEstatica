#include <iostream>
#include <string>

using namespace std;

class Pila
{
    private:
        string *PilaArreglo;
        int valor;
        int tamanio;
    public:
        Pila(int);
        bool Llena();
        bool vacia();
        void push(string);
        string pop();
        string top();
        int getPrecendente(char);
};
    Pila::Pila(int s)
    {
        tamanio = s;
        PilaArreglo = new string[tamanio];
        valor = -1;
    }

    bool Pila::Llena() {
        return valor == tamanio - 1;
    }

    bool Pila::vacia() {
        return valor == -1;
    }

    void Pila::push(string x) {
        if (Llena()) {
            cout << "Error: Pila esta llena." << endl;
        } else {
            valor++;
            PilaArreglo[valor] = x;
        }
    }

    string Pila::pop() {
        if (vacia()) {
            cout << "Error: Pila esta vacia." << endl;
            return "";
        } else {
            string x = PilaArreglo[valor];
            valor--;
            return x;
        }
    }

    string Pila::top() {
        if (vacia()) {
            cout << "Error: Pila esta vacia." << endl;
            return "";
        } else {
            return PilaArreglo[valor];
        }
    }

    int Pila::getPrecendente(char op)
    {
    if (op == '^') {
        return 3;
    } else if (op == '*' || op == '/') {
        return 2;
    } else if (op == '+' || op == '-') {
        return 1;
    } else {
        return 0;
    }
    }


int main() 
{
    int ciclo;
    do
    {
        system("cls"); system("color F0");
        string infija, nueva;
        cout <<"\n\n\t\t\t\t\t  OPERACION INFIJA A POSTFIJA";
        cout <<"\n\n\t\t\t\t  Introduce la operacion infija: ";
        cin >> infija;

        Pila Pila(infija.length());
        string postfija = "";

        for (int i = 0; i < infija.length(); i++)
        {
            char c = infija[i];

            if (c == '(')
            {
                Pila.push("(");
            }
            else if (c == ')')
            {
                while (Pila.top() != "(")
                {
                postfija += Pila.pop() + " ";
                }
                Pila.pop();
            }
            else if (c == '+' || c == '-' || c == '*' || c == '/' || c == '^')
            {
                while (!Pila.vacia() && Pila.getPrecendente(Pila.top()[0]) >= Pila.getPrecendente(c)) {
                postfija += Pila.pop() + " ";
            }
                Pila.push(string(1, c));
            }
            else if (c >= '0' && c <= '9')
            {
                string operand = "";
                while (i < infija.length() && infija[i] >= '0' && infija[i] <= '9')
                {
                operand += infija[i];
                i++;
                }
                i--;
                postfija += operand + " ";
            }
            }

            while (!Pila.vacia())
            {
                postfija += Pila.pop() + " ";
            }

            nueva=postfija;

        cout <<"\n\n\t\t\t\t  Operacion postfija: "<<nueva;
        cout <<"\n\n\n\n\t\t\t\t  Repetir operacion \n\t\t\t\t  1) Si \n\t\t\t\t  0) No \n\t\t\t\t  Escoge: ";
        cin >> ciclo;
    }
    while(ciclo!=0);
    return 0;
}
